--------BASIC CONCEPT--------
1. hash表大小一定要位素数

2. 解决hash 冲突
>>separate chaining: 
load factor <=1, 
使用链表需要给新单元分配地址会导致算法性能减慢

>>open addressing（probing hash table)
how: 依次尝试位置h0(x), h1(x), h2(x)
hi(x) = (hash(x) + f(i)) mod TableSize
线性探测法：f(i) = i
平方探测法：f(i) = i * i, 实现时f(i) = f(i - 1) + 2 * i - 1避免乘法

load factor < 0.5

>> double hashing
f(i) = i * hash2(x), hash2(x) 的值不能为0，否则无意义，
好的hash2(x)比如R - x mod R, R 为小于TableSize的素数
double hashing 在理论上比较有吸引力，实际中平方探测法简单快速

3. rehashing
选择大于原表大小两倍的第一个素数

4. extensible hashing：联想B树，针对数据很大无法装进内存的情况

--------HINTS--------
1. When you are required O(N) time complexity with some unordered things, try hash.

